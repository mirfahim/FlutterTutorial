
import 'package:broad_solution/order/buy.dart';
import 'package:flutter/material.dart';
import 'package:broad_solution/main.dart';
import 'package:broad_solution/order/buylist.dart';

import 'package:cloud_firestore/cloud_firestore.dart';



class Test extends StatefulWidget {
  Test();
  @override
  _BuyState createState() => _BuyState();
}

class _BuyState extends State<Test> {
 
final List<String> _dropdownValues = [
    "One",
    "Two",
    "Three",
    "Four",
    "Five"
  ]; //The list of values we want on the dropdown
  String _currentlySelected = ""; 

  List<Color> _colors = [ 
      Colors.blue,
    
    Colors.blue[100],
    
  ];

  int _currentIndex = 0;

  _onChanged() { //update with a new color when the user taps button
    int _colorCount = _colors.length;

    setState(() {
      if (_currentIndex == _colorCount - 1) {
        _currentIndex = 0;
      } else {
        _currentIndex += 1;
      }
    });

    
  }

 // button color end

  String customername,email,dropdown ;

  getcustomername(customername){
    this.customername=customername;
  }
   getemail(email){
    this.email=email;
  }

  getdropdown(_dropdownValues){
    this.dropdown=_dropdownValues;
  }
  
  

  createData(){
    DocumentReference ds=Firestore.instance.collection('test').document(customername);
    Map<String,dynamic> tasks={
      "customername":customername,
      "email":email,
      "dropdown":_currentlySelected,
       
          
    };

    ds.setData(tasks).whenComplete((){
      print("task updated");
    });

  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      
backgroundColor: Color(0xFF55b9f3),






    // .............................BODY.............................







      body: 
      
      ListView(

        children: <Widget>[
          //........................appbar.............
Container(
          height: 72,
          width: 392,
          
          child: 
             
            
          Center(child:
          Text(
            "Order", style:TextStyle(
            fontSize: 22,
            color: Colors.white,
            fontWeight: FontWeight.bold),
          ),
          ),
          
          
      
          decoration: BoxDecoration(
              gradient: LinearGradient(
                  begin: Alignment(-4.0, -16.0),
                  end: Alignment(4.0, 16.0),
                  colors: [
                    Color(0xFF5bc6ff),
                    Color(0xFF4da7db),
                  ]),
              borderRadius: BorderRadius.all(Radius.circular(35)),
              boxShadow: [
                BoxShadow(
                    color: Color(0xFF4ca5d8),
                    offset: Offset(5.0, 5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
                BoxShadow(
                    color: Color(0xFF5ecdff),
                    offset: Offset(5.0, 5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
              ]),
        ),

// ................................middle...........................

Container(
  height:8,
  
),
          //.......................appbarend
         
          Container(
            height:560,
              width:380,
               child: Form(
                 
                 child: ListView(
                     children: <Widget>[
 SizedBox(
   height:15,
 ),
                Padding(

                  padding: EdgeInsets.only(left: 5.0, right: 5.0),
                  child:
                  Text("Please fill the form carefully",
                  textAlign: TextAlign.center,
                  style:TextStyle(fontSize:14,color:Color.fromRGBO(58, 66, 86, 1.0),fontWeight: FontWeight.bold, ), ),
                ),
                Padding(
                  
                  padding: EdgeInsets.only(left: 16.0, right: 16.0),
                  child: TextField(
                    cursorColor: Colors.white,
                    maxLength: 30,
                   // controller: _taskNameController,
                    onChanged: (String customername){
                       getcustomername(customername);   
                    },
                    decoration: InputDecoration(labelText: "Customer Name:"),
                  ),
                ),
Padding(
                  padding: EdgeInsets.only(left: 16.0, right: 16.0),
                  child: TextField(
                    maxLength: 20,
                    cursorColor: Colors.white,
                   // controller: _taskDateController,
                    decoration: InputDecoration(focusColor:Colors.white,hoverColor:Colors.white,fillColor: Colors.white,labelText: "Email: "),
                    onChanged: (String email){
                       getemail(email);   
                    },
                  ),
                ),

                
                
                
               

//................................ Dropdown......................................
DropdownButton(
            //map each value from the lIst to our dropdownMenuItem widget
            items: _dropdownValues
                .map((value) => DropdownMenuItem(
                      child: Text(value),
                      value: value,
                    ))
                .toList(),
            onChanged: (String _dropdownValues) {
            
                       getdropdown(_dropdownValues);   
                   
              //once dropdown changes, update the state of out currentValue
              setState(() {
                _currentlySelected = _dropdownValues;
              });
            },
            //this wont make dropdown expanded and fill the horizontal space
            isExpanded: false,
            //make default value of dropdown the first value of our list
            value:  _currentlySelected,
          ),
//.......................Dropdown end................................

                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: <Widget>[
                    RaisedButton(
                        color:   Colors.blue,
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                        child: const Text(
                          "Cancel",
                          style: TextStyle(color: Colors.white),
                        )),
                    // This button results in adding the contact to the database
                    RaisedButton(
                        // color: Colors.green,
                        color: _colors[_currentIndex],
                        onPressed: () {
                          createData(); _onChanged();
                          // createData();
                        },
                        child: const Text(
                          "Submit",
                          style: TextStyle(color: Colors.white),
                        ))
                  ],
                ),
                     ],
                 ),
                 ), 
              decoration: BoxDecoration(
              gradient: LinearGradient(
                  begin: Alignment(-4.0, -16.0),
                  end: Alignment(4.0, 16.0),
                  colors: [
                    Color(0xFF5bc6ff),
                    Color(0xFF4da7db),
                  ]),
              borderRadius: BorderRadius.all(Radius.circular(35)),
              boxShadow: [
                BoxShadow(
                    color: Color(0xFF4ca5d8),
                    offset: Offset(5.0, 5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
                BoxShadow(
                    color: Color(0xFF5ecdff),
                    offset: Offset(-5.0, -5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
              ]),
          ),
          


          // ................................bottom bar................................

           Container(
           child:Row(children: <Widget>[

             Container(
               width: 15,
             ),
             
           GestureDetector(
                 onTap: () {
        Navigator.push(
                      context,
                      new MaterialPageRoute(
                          builder: (BuildContext context) =>
                            MyApp()));
         
      },
                  child:   
          
          Container(
          height: 100,
          width: 100,
          child: Icon(
            Icons.home,
            size: 80,
            color: Colors.white,
          ),
          decoration: BoxDecoration(
              gradient: LinearGradient(
                  begin: Alignment(-4.0, -16.0),
                  end: Alignment(4.0, 16.0),
                  colors: [
                    Color(0xFF5bc6ff),
                    Color(0xFF4da7db),
                  ]),
              borderRadius: BorderRadius.all(Radius.circular(35)),
              boxShadow: [
                BoxShadow(
                    color: Color(0xFF4ca5d8),
                    offset: Offset(5.0, 5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
                BoxShadow(
                    color: Color(0xFF5ecdff),
                    offset: Offset(-5.0, -5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
              ]),
        ),
           ),




       


//................................new row two........................................
Container(
  width: 30,
),

         
       GestureDetector(
                 onTap: () {
        Navigator.push(
                      context,
                      new MaterialPageRoute(
                          builder: (BuildContext context) =>
                               Buy()));
         
      },
                  child:   
        Container(
          height: 100,
          width: 100,
          child: Icon(
            Icons.add,
            size: 80,
            color: Colors.white,
          ),
          decoration: BoxDecoration(
              gradient: LinearGradient(
                  begin: Alignment(-4.0, -16.0),
                  end: Alignment(4.0, 16.0),
                  colors: [
                    Color(0xFF5bc6ff),
                    Color(0xFF4da7db),
                  ]),
              borderRadius: BorderRadius.all(Radius.circular(35)),
              boxShadow: [
                BoxShadow(
                    color: Color(0xFF4ca5d8),
                    offset: Offset(5.0, 5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
                BoxShadow(
                    color: Color(0xFF5ecdff),
                    offset: Offset(-5.0, -5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
              ]),
        ),
       ),




//...................................................row end..........................................
Container(
  width: 30,
),
//.....................................ROW THREE..........................................
          GestureDetector(
                 onTap: () {
        Navigator.push(
                      context,
                      new MaterialPageRoute(
                          builder: (BuildContext context) =>
                               UserList()));
         
      },
                  child:   
          
        Container(
          height: 100,
          width: 100,
          child: Icon(
            Icons.account_box,
            size: 80,
            color: Colors.white,
          ),
          decoration: BoxDecoration(
              gradient: LinearGradient(
                  begin: Alignment(-4.0, -16.0),
                  end: Alignment(4.0, 16.0),
                  colors: [
                    Color(0xFF5bc6ff),
                    Color(0xFF4da7db),
                  ], ),
              borderRadius: BorderRadius.all(Radius.circular(35)),
              boxShadow: [
                BoxShadow(
                    color: Color(0xFF4ca5d8),
                    offset: Offset(5.0, 5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
                BoxShadow(
                    color: Color(0xFF5ecdff),
                    offset: Offset(-5.0, -5.0),
                    blurRadius: 15.0,
                    spreadRadius: 1.0),
              ]),
        ),
        
          ),


//...................................Row end.................................
             ],
           ),
         ),
          
         // ............................bottom bar


        ],
      ),
        
          
    );
  }

}







class New extends StatelessWidget {
  
  final amarname;
  final vainame;
New({@required this.amarname,
@required this.vainame,
});
  
  @override
  Widget build(BuildContext context) {
    return Scaffold(
     backgroundColor: Color(0xFF55b9f3),
     
body: 
Column(
  children: <Widget>[
    Container(height:100,
    
    ),
    Text(" shu shagotom $amarname "),
    Text(" ebong shu shagotom  $vainame"),
  ],
),
);


  }}

// Inherited widget for managing a name
